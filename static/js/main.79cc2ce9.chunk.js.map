{"version":3,"sources":["Todo.js","NewTask.js","TaskList.js","ToDoList.js","App.js","index.js"],"names":["Todo","state","isEditing","task","props","handleRemove","removeTodo","id","toggleEdit","setState","handleEdit","e","preventDefault","updateTodo","handleChange","target","name","value","handleToggle","toggleTodo","this","onSubmit","className","autoComplete","type","onChange","length","onClick","completed","Component","NewTask","handleSubmit","createTask","uuid","placeholder","TaskList","active","tasks","filter","done","ToDoList","todos","create","newTask","remove","item","update","updateTask","updatedTodos","map","todo","toggleCompletedTask","completedTask","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79cc2ce9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Todo extends Component {\n  state = {\n    isEditing: false,\n    task: this.props.task,\n  };\n  handleRemove = () => {\n    this.props.removeTodo(this.props.id);\n  };\n  toggleEdit = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    });\n  };\n  handleEdit = (e) => {\n    e.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false,\n    });\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleToggle = (e) => {\n    this.props.toggleTodo(this.props.id);\n  };\n  render() {\n    if (this.state.isEditing) {\n      return (\n        <div>\n          <form\n            onSubmit={this.handleEdit}\n            className='app-task-edit'\n            autoComplete='off'\n          >\n            <input\n              type='text'\n              value={this.state.task}\n              name='task'\n              onChange={this.handleChange}\n              className='app-task-edit-input'\n            />\n            <button className='app-task-edit-button'>\n              <i className='far fa-save'></i>\n            </button>\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            this.props.task.length > 20\n              ? \"app-task-container-more\"\n              : \"app-task-container\"\n          }\n        >\n          <button className='app-btn-action' onClick={this.toggleEdit}>\n            <i className='fas fa-edit'></i>\n          </button>\n          <button className='app-btn-action' onClick={this.handleRemove}>\n            <i className='fas fa-trash-alt'></i>\n          </button>\n          <li\n            className={\n              this.props.completed\n                ? \"app-task-completed\"\n                : \"app-task\" && this.props.task.length > 20\n                ? \"app-task-more\"\n                : \"app-task\"\n            }\n            onClick={this.handleToggle}\n          >\n            {this.props.task}\n          </li>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport uuid from \"uuid/v4\";\nclass NewTask extends Component {\n  state = {\n    task: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createTask({ ...this.state, id: uuid(), completed: false });\n    this.setState({ task: \"\" });\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className='app-form'\n        autoComplete='off'\n      >\n        <input\n          type='text'\n          placeholder='Dodaj zadanie'\n          id='task'\n          name='task'\n          value={this.state.task}\n          onChange={this.handleChange}\n          className='app-form-input'\n        />\n        <button className='app-form-button'>Dodaj</button>\n      </form>\n    );\n  }\n}\n\nexport default NewTask;\n","import React, { Component } from \"react\";\n\nclass TaskList extends Component {\n  render() {\n    const active = this.props.tasks.filter(task => !task.completed);\n    const done = this.props.tasks.filter(task => task.completed);\n    return (\n      <div className='main-task-counter'>\n        <i className='far fa-check-square'>\n          <p className='single-task-counter'>wykonane</p>\n          <p className='single-task-number'>{done.length}</p>\n        </i>\n        <i className='fas fa-wrench'>\n          <p className='single-task-counter'>aktywne</p>\n          <p className='single-task-number'>{active.length}</p>\n        </i>\n        <i className='fas fa-globe'>\n          <p className='single-task-counter'>ogólnie</p>\n          <p className='single-task-number'>{this.props.tasks.length}</p>\n        </i>\n      </div>\n    );\n  }\n}\n\nexport default TaskList;\n","import React, { Component, Fragment } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTask from \"./NewTask\";\nimport TaskList from \"./TaskList\";\nclass ToDoList extends Component {\n  state = {\n    todos: []\n  };\n  create = newTask => {\n    this.setState({\n      todos: [...this.state.todos, newTask]\n    });\n  };\n  remove = id => {\n    this.setState({\n      todos: this.state.todos.filter(item => item.id !== id)\n    });\n  };\n\n  update = (id, updateTask) => {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updateTask };\n      }\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  };\n  toggleCompletedTask = id => {\n    const completedTask = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: completedTask });\n  };\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          task={todo.task}\n          completed={todo.completed}\n          toggleTodo={this.toggleCompletedTask}\n          removeTodo={this.remove}\n          updateTodo={this.update}\n        />\n      );\n    });\n    return (\n      <Fragment>\n        <div className='main-header'>\n          <h1>\n            todo app <i className='fas fa-clipboard-list' />\n          </h1>\n          <p className='main-quote'>Bądź lepszą wersją siebie!</p>\n          <TaskList tasks={this.state.todos} done={this.state.done} />\n        </div>\n        <div>\n          <h3 className='app-date'>Zadania na dziś: </h3>\n          <ul className='app-todos-container'>{todos}</ul>\n          <NewTask createTask={this.create} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default ToDoList;\n","import React, { Fragment } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <ToDoList />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}