{"version":3,"sources":["Todo.js","NewTask.js","TaskList.js","ToDoList.js","App.js","index.js"],"names":["Todo","state","isEditing","task","props","handleRemove","removeTodo","id","toggleEdit","setState","handleEdit","e","preventDefault","updateTodo","handleChange","target","name","value","handleToggle","toggleTodo","this","onSubmit","className","autoComplete","type","onChange","onClick","completed","Component","NewTask","handleSubmit","createTask","uuid","placeholder","TaskList","active","tasks","filter","done","length","ToDoList","todos","create","newTask","remove","item","update","updateTask","updatedTodos","map","todo","toggleCompletedTask","completedTask","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cddd3160.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Todo extends Component {\r\n  state = {\r\n    isEditing: false,\r\n    task: this.props.task\r\n  };\r\n  handleRemove = () => {\r\n    this.props.removeTodo(this.props.id);\r\n  };\r\n  toggleEdit = () => {\r\n    this.setState({\r\n      isEditing: !this.state.isEditing\r\n    });\r\n  };\r\n  handleEdit = e => {\r\n    e.preventDefault();\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState({\r\n      isEditing: false\r\n    });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleToggle = e => {\r\n    this.props.toggleTodo(this.props.id);\r\n  };\r\n  render() {\r\n    if (this.state.isEditing) {\r\n      return (\r\n        <div>\r\n          <form\r\n            onSubmit={this.handleEdit}\r\n            className='app-task-edit'\r\n            autoComplete='off'\r\n          >\r\n            <input\r\n              type='text'\r\n              value={this.state.task}\r\n              name='task'\r\n              onChange={this.handleChange}\r\n              className='app-task-edit-input'\r\n            />\r\n            <button className='app-task-edit-button'>\r\n              <i className='far fa-save'></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='app-task-container'>\r\n          <button className='app-btn-action' onClick={this.toggleEdit}>\r\n            <i className='fas fa-edit'></i>\r\n          </button>\r\n          <button className='app-btn-action' onClick={this.handleRemove}>\r\n            <i className='fas fa-trash-alt'></i>\r\n          </button>\r\n          <li\r\n            className={this.props.completed ? \"app-task-completed\" : \"app-task\"}\r\n            onClick={this.handleToggle}\r\n          >\r\n            {this.props.task}\r\n          </li>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nclass NewTask extends Component {\r\n  state = {\r\n    task: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createTask({ ...this.state, id: uuid(), completed: false });\r\n    this.setState({ task: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        className='app-form'\r\n        autoComplete='off'\r\n      >\r\n        <input\r\n          type='text'\r\n          placeholder='Dodaj zadanie'\r\n          id='task'\r\n          name='task'\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          className='app-form-input'\r\n        />\r\n        <button className='app-form-button'>Dodaj</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewTask;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TaskList extends Component {\r\n  render() {\r\n    const active = this.props.tasks.filter(task => !task.completed);\r\n    const done = this.props.tasks.filter(task => task.completed);\r\n    return (\r\n      <div className='main-task-counter'>\r\n        <i className='far fa-check-square'>\r\n          <p className='single-task-counter'>wykonane</p>\r\n          <p className='single-task-number'>{done.length}</p>\r\n        </i>\r\n        <i className='fas fa-wrench'>\r\n          <p className='single-task-counter'>aktywne</p>\r\n          <p className='single-task-number'>{active.length}</p>\r\n        </i>\r\n        <i className='fas fa-globe'>\r\n          <p className='single-task-counter'>ogólnie</p>\r\n          <p className='single-task-number'>{this.props.tasks.length}</p>\r\n        </i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport NewTask from \"./NewTask\";\r\nimport TaskList from \"./TaskList\";\r\nclass ToDoList extends Component {\r\n  state = {\r\n    todos: []\r\n  };\r\n  create = newTask => {\r\n    this.setState({\r\n      todos: [...this.state.todos, newTask]\r\n    });\r\n  };\r\n  remove = id => {\r\n    this.setState({\r\n      todos: this.state.todos.filter(item => item.id !== id)\r\n    });\r\n  };\r\n\r\n  update = (id, updateTask) => {\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updateTask };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({\r\n      todos: updatedTodos\r\n    });\r\n  };\r\n  toggleCompletedTask = id => {\r\n    const completedTask = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: completedTask });\r\n  };\r\n  render() {\r\n    const todos = this.state.todos.map(todo => {\r\n      return (\r\n        <Todo\r\n          key={todo.id}\r\n          id={todo.id}\r\n          task={todo.task}\r\n          completed={todo.completed}\r\n          toggleTodo={this.toggleCompletedTask}\r\n          removeTodo={this.remove}\r\n          updateTodo={this.update}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <Fragment>\r\n        <div className='main-header'>\r\n          <h1>\r\n            todo app <i className='fas fa-clipboard-list' />\r\n          </h1>\r\n          <p className='main-quote'>Bądź lepszą wersją siebie!</p>\r\n          <TaskList tasks={this.state.todos} done={this.state.done} />\r\n        </div>\r\n        <div>\r\n          <h3 className='app-date'>Zadania na dziś: </h3>\r\n          <ul className='app-todos-container'>{todos}</ul>\r\n          <NewTask createTask={this.create} />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Fragment } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <ToDoList />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}